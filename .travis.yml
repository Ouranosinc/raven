language: generic
matrix:
  fast_finish: true
  include:
    - name: "macOS"
      os: osx
    - name: "Linux (Python2.7)"
      os: linux
      dist: xenial
      python: "2.7"
    - name: "Linux (Python3.6 + pep8)"
      os: linux
      dist: xenial
      python: "3.6"
      env:
        - PEP8=true
branches:
  only:
    - master
sudo: false
before_install:
  - if [ $TRAVIS_OS_NAME = linux ]; then sudo apt-get install libnetcdf-dev; else brew install netcdf; fi
  - ifeq "$(UNAME_S)" "Linux"
      FN := Miniconda3-latest-Linux-x86_64.sh
      else ifeq "$(UNAME_S)" "Darwin"
      FN := Miniconda3-latest-MacOSX-x86_64.sh
      else
      FN := unknown
      endif
  - wget https://repo.continuum.io/miniconda/$FN -O miniconda.sh; else Miniconda3-latest-MacOSX-x86_64.sh fi

install:
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - make install
  - make start
#  - sleep 2
#  # Prepare env with Python version
#  - conda create -n raven python=$TRAVIS_PYTHON_VERSION
#  # Update now the env with our environment
#  - conda env update -f environment.yml
#  - source activate raven
#  # Packages for testing
#  - conda install pytest flake8
#  # Install Emu WPS
#  - python setup.py install
before_script:
#  # Start WPS service on port 5000 on 0.0.0.0
#  - raven start --daemon --bind-host 0.0.0.0 --port 5000
  - sleep 2
script:
  - make test
  - if [ $PEP8 = true ]; then make pep8; fi
