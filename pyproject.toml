[build-system]
requires = ["flit_core >=3.9,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "birdhouse-raven"
authors = [
  {name = "David Huard", email = "huard.david@ouranos.ca"},
  {name = "Richard Arsenault", email = "richard.arsenault@etsmtl.ca"}
]
maintainers = [
  {name = "Trevor James Smith", email = "smith.trevorj@ouranos.ca"},
  {name = "Tuan Long Vu", email = "vu.long@ouranos.ca"}
]
readme = {file = "README.rst", content-type = "text/x-rst"}
requires-python = ">=3.9.0"
keywords = ["wps", "pywps", "birdhouse", "raven", "hydrology", "gis", "analysis"]
license = {file = "LICENSE"}
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: Science/Research",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: POSIX :: Linux",
  "Operating System :: Unix",
  "Programming Language :: Python",
  "Natural Language :: English",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering :: Atmospheric Science",
  "Topic :: Scientific/Engineering :: GIS",
  "Topic :: Scientific/Engineering :: Hydrology",
  "License :: OSI Approved :: MIT License"
]
dynamic = ["description", "version"]
dependencies = [
  "anyascii",
  "click >=8.1.7",
  "jinja2 >=3.1.4",
  "matplotlib",
  "netCDF4",
  "numpy >=1.23.0",
  "owslib",
  "pandas >=2.2",
  "psutil >=6.0.0",
  "pywps >=4.6",
  "requests",
  "xarray >=2023.11.0",
  "xclim >=0.48.2",
  # GIS libraries
  "affine",
  "cartopy >=0.23.0",
  "fiona >=1.9.0",
  "geojson",
  "geopandas >=0.12.0",
  "pyogrio >=0.7.2",
  "pyproj >=3.4",
  "rasterio",
  "rasterstats",
  "requests",
  "rioxarray",
  "shapely >=2.0",
  # Docs and other utilities
  "fsspec",
  "psycopg2", # to use postgres to log pywps requests like in Prod
  "pymetalink"
]

[project.optional-dependencies]
dev = [
  # Dev tools and testing
  "birdhouse-birdy",
  "black >=24.10.0",
  "build",
  "bump-my-version >=0.26.0",
  "flake8 >=7.0.0",
  "flake8-alphabetize",
  "flake8-rst-docstrings",
  "flit >=3.8,<4.0",
  "ipykernel",
  "isort >=5.13.2",
  "nbconvert",
  "nbval",
  "nc-time-axis",
  "pip >=23.3.0",
  "pre-commit >=3.6.0",
  "pytest >=8.0.0",
  "pytest-xdist >=3.2",
  "yamllint"
]
docs = [
  "ipyleaflet",
  "ipython >=8.5.0,!=9.0.0",
  "ipywidgets",
  "nbsphinx >=0.9.5",
  "sphinx >=7.0.0,<8.2.0",
  "sphinx-autodoc-typehints",
  "sphinx-codeautolink",
  "sphinx-copybutton",
  "sphinx-rtd-theme >=1.0"
]

[project.scripts]
raven-wps = "raven.cli:cli"

[project.urls]
"Homepage" = "https://pavics-raven.readthedocs.io/"
"Source" = "https://github.com/Ouranosinc/raven/"
"Changelog" = "https://pavics-sdi.readthedocs.io/projects/raven/en/latest/changes.html"
"Issue tracker" = "https://github.com/Ouranosinc/raven/issues"
"About Ouranos" = "https://www.ouranos.ca/en/"

[tool]

[tool.black]
target-version = [
  "py39",
  "py310",
  "py311",
  "py312"
]

[tool.bumpversion]
current_version = "0.18.2"
commit = true
commit_args = "--no-verify"
tag = false
allow_dirty = true

[[tool.bumpversion.files]]
filename = "raven/__version__.py"
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""

[[tool.bumpversion.files]]
filename = "docs/source/conf.py"
parse = "version|release = {current_version}"
replace = "{new_version}"

[[tool.bumpversion.files]]
filename = "Dockerfile"
search = "Version=\"{current_version}\""
replace = "Version=\"{new_version}\""

[tool.coverage.run]
relative_files = true
omit = ["tests/*.py"]

[tool.flit.module]
name = "raven"

[tool.flit.sdist]
include = [
  "AUTHORS.rst",
  "CHANGELOG.rst",
  "CONTRIBUTING.rst",
  "LICENSE",
  "Makefile",
  "README.rst",
  "Dockerfile",
  "docker-compose.yml",
  "docs/**/*.ico",
  "docs/**/*.ipynb",
  "docs/**/*.svg",
  "docs/Makefile",
  "docs/source/conf.py",
  "environment*.yml",
  "src/raven/**/*.py",
  "src/raven/data/**/*.zip",
  "src/raven/default.cfg",
  "src/raven/templates/pywps.cfg",
  "setup.cfg",
  "tests/*.py",
  "tests/test.cfg"
]
exclude = [
  "**/*.py[co]",
  "**/__pycache__",
  ".*",
  "docs/build",
  "docs/source/modules.rst",
  "docs/source/notebooks/.ipynb_checkpoints",
  "docs/source/output-sanitize.cfg",
  "docs/source/raven*.rst"
]

[tool.isort]
profile = "black"
py_version = 39
append_only = true

[tool.pytest.ini_options]
addopts = [
  "--verbose",
  "--color=yes",
  "--strict-markers",
  "--tb=native",
  "--numprocesses=logical",
  "--maxprocesses=4",
  "--dist=worksteal"
]
python_files = "test_*.py"
norecursedirs = ["src", ".git", "bin"]
filterwarnings = ["ignore::UserWarning"]
testpaths = "tests"
markers = [
  "online: mark test to need internet connection (deselect with '-m \"not online\"')",
  "slow: mark test to be slow (deselect with '-m \"not slow\"')",
  "very_slow: mark test to be very slow (deselect with '-m \"not very_slow\"')"
]
